diff -ruN gcc-13.2.0.orig/gcc/config/i386/mingw32.h gcc-13.2.0/gcc/config/i386/mingw32.h
--- gcc-13.2.0.orig/gcc/config/i386/mingw32.h	2023-07-27 10:13:04.000000000 +0200
+++ gcc-13.2.0/gcc/config/i386/mingw32.h	2024-01-05 20:59:04.516345513 +0100
@@ -205,7 +205,7 @@
 
 /* Override startfile prefix defaults.  */
 #ifndef STANDARD_STARTFILE_PREFIX_1
-#define STANDARD_STARTFILE_PREFIX_1 "/mingw/lib/"
+#define STANDARD_STARTFILE_PREFIX_1 "/lib/"
 #endif
 #ifndef STANDARD_STARTFILE_PREFIX_2
 #define STANDARD_STARTFILE_PREFIX_2 ""
@@ -214,7 +214,7 @@
 /* For native mingw-version we need to take care that NATIVE_SYSTEM_HEADER_DIR
    macro contains POSIX-style path.  See bug 52947.  */
 #undef NATIVE_SYSTEM_HEADER_DIR
-#define NATIVE_SYSTEM_HEADER_DIR "/mingw/include"
+#define NATIVE_SYSTEM_HEADER_DIR "/include"
 
 /* Output STRING, a string representing a filename, to FILE.
    We canonicalize it to be in Unix format (backslashes are replaced
diff -ruN gcc-13.2.0.orig/gcc/config/i386/mingw32.h.orig gcc-13.2.0/gcc/config/i386/mingw32.h.orig
diff -ruN gcc-13.2.0.orig/gcc/config.gcc gcc-13.2.0/gcc/config.gcc
--- gcc-13.2.0.orig/gcc/config.gcc	2023-07-27 10:13:04.000000000 +0200
+++ gcc-13.2.0/gcc/config.gcc	2024-01-05 20:59:50.893340976 +0100
@@ -2181,7 +2181,7 @@
 			tmake_file="${tmake_file} i386/t-mingw-w32"
 			;;
 	esac
-        native_system_header_dir=/mingw/include
+        native_system_header_dir=/include
 	target_gtfiles="$target_gtfiles \$(srcdir)/config/i386/winnt.cc"
 	extra_options="${extra_options} i386/cygming.opt i386/mingw.opt"
 	case ${target} in
diff -ruN gcc-13.2.0.orig/gcc-1-fixes.patch gcc-13.2.0/gcc-1-fixes.patch
diff -ruN gcc-13.2.0.orig/libgomp/libgomp.h gcc-13.2.0/libgomp/libgomp.h
--- gcc-13.2.0.orig/libgomp/libgomp.h	2023-07-27 10:13:08.000000000 +0200
+++ gcc-13.2.0/libgomp/libgomp.h	2024-01-05 20:59:04.516345513 +0100
@@ -69,6 +69,14 @@
 # endif
 #endif
 
+#include <stdio.h>
+#include <stdio.h>
+#ifdef __MINGW_PRINTF_FORMAT
+#define PRINTF_FORMAT __MINGW_PRINTF_FORMAT
+#else
+#define PRINTF_FORMAT printf
+#endif
+
 #ifdef HAVE_ATTRIBUTE_VISIBILITY
 # pragma GCC visibility push(hidden)
 #endif
@@ -177,7 +185,7 @@
 
 extern void gomp_vdebug (int, const char *, va_list);
 extern void gomp_debug (int, const char *, ...)
-	__attribute__ ((format (printf, 2, 3)));
+	__attribute__ ((format (PRINTF_FORMAT, 2, 3)));
 #define gomp_vdebug(KIND, FMT, VALIST) \
   do { \
     if (__builtin_expect (gomp_debug_var, 0)) \
@@ -190,11 +198,11 @@
   } while (0)
 extern void gomp_verror (const char *, va_list);
 extern void gomp_error (const char *, ...)
-	__attribute__ ((format (printf, 1, 2)));
+	__attribute__ ((format (PRINTF_FORMAT, 1, 2)));
 extern void gomp_vfatal (const char *, va_list)
 	__attribute__ ((noreturn));
 extern void gomp_fatal (const char *, ...)
-	__attribute__ ((noreturn, format (printf, 1, 2)));
+	__attribute__ ((noreturn, format (PRINTF_FORMAT, 1, 2)));
 
 struct gomp_task;
 struct gomp_taskgroup;
diff -ruN gcc-13.2.0.orig/libgomp/libgomp.h.orig gcc-13.2.0/libgomp/libgomp.h.orig
